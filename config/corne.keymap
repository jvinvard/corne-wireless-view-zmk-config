/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keys_fr_canadian_french.h"

#define COLEMAK 0
#define QWERTY 1
#define LOWER 2
#define RAISE 3
#define BT_LAYER 4
#define NAV_LAYER 5
#define NUM_LAYER 6
#define GAME_LAYER 7
#define TO_LAYER 8

/* KEY POSITIONS
  ╭───────────────────────╮          ╭────────────────────────╮
  │  0   1   2   3   4  5 │          │  6   7   8   9  10  11 │
  │ 12  13  14  15  16 17 │          │ 18  19  20  21  22  23 │
  │ 24  25  26  27  28 29 ─────╮ ╭───  30  31  32  33  34  35 │
  ╰──────────────╮  36  37  38 │ │ 39  40  41 ╭───────────────╯
                 ╰─────────────╯ ╰────────────╯           
*/

/ {
    combos {
        compatible = "zmk,combos";
        combo_layers {
            timeout-ms = <50>;
            key-positions = <36 37>;
            bindings = <&to 8>;
        };
        combo_qwerty {
            timeout-ms = <50>;
            key-positions = <40 41>;
            bindings = <&tog 1>;
        };
    };
    macros {
        ZM_CAD: ZM_CAD {
            label = "ZM_CAD";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL &kp LALT>
                , <&macro_tap &kp DEL>
                , <&macro_release &kp LCTRL &kp LALT>
                ;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                COLEMAK {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ^  | BKSP |
// | CTRL |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |  `   |
// | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  É  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        label = "Colemak";
                        bindings = <
   &kp TAB   &kp FR_Q &kp FR_W &kp FR_F &kp FR_P &kp FR_B   &kp FR_J &kp FR_L  &kp FR_U     &kp FR_Y   &kp FR_CARET    &kp BSPC
   &kp LCTRL &kp FR_A &kp FR_R &kp FR_S &kp FR_T &kp FR_G   &kp FR_M &kp FR_N  &kp FR_E     &kp FR_I   &kp FR_O &kp FR_GRAVE
   &kp LSHFT &kp FR_Z &kp FR_X &kp FR_C &kp FR_D &kp FR_V   &kp FR_K &kp FR_H  &kp FR_COMMA &kp FR_DOT &kp FR_E_ACUTE &kp ESC
                  &kp LGUI &mo 2 &kp SPACE   &kp RET &mo 3 &kp RALT
                        >;
                };
                QWERTY {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        label = "Qwerty";
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL     &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp LGUI &mo 2 &kp SPACE   &kp RET &mo 3 &kp RALT
                        >;
                };
                LOWER {
// -----------------------------------------------------------------------------------------
// |  F1  | F2  | F3  | F4  | F5  | F6  |   | F7  | F8  | F9  | F10 | F11 | F12  |
// |  |   |  {  |  }  |  (  |  )  |  \  |   |  /  | LFT | DWN | UP  | RGT |  ~   |
// | CAPS |  <  |  >  |  [  |  ]  |  _  |   |  ­¯  |  ¨  | ´   |  `  |  ¸  |  `   |
//                    | GUI |     | SPC |   |BKSP |     |ZM_CAD|
                        label = "Lower";
                        bindings = <
   &kp F1    &kp F2       &kp F3       &kp F4       &kp F5       &kp F6         &kp F7   &kp F8   &kp F9 &kp F10    &kp F11 &kp F12
   &kp FR_PIPE &kp FR_LBRC &kp FR_RBRC &kp FR_LPAR &kp FR_RPAR &kp FR_BSLH   &kp FR_FSLH &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp FR_TILDE
   &kp CAPS  &kp FR_LT       &kp FR_GT       &kp FR_LBKT       &kp FR_RBKT       &kp FR_UNDER         &kp FR_MACR   &kp FR_UMLAUT   &kp FR_ACUTE &kp FR_GRAVE    &kp FR_CEDILLA &kp GRAVE
                          	        &kp LGUI     &trans       &kp SPACE      &kp BKSP  &trans   &ZM_CAD
                        >;
                };
                RAISE {
// -----------------------------------------------------------------------------------------
// |   !  |  @  |  #  |  $  |  %  |  ?  |   |  &  |  *  |  -  |  +  |  =  | DEL  |
// |   1  |  2  |  3  |  4  |  5  |  6  |   |  7  |  8  |  9  |  0  |HOME | PGUP |
// |   ^  |  "  |  «  |  »  |  ¢  |  £  |   |  °  |  '  |  ;  |  :  | END |PGDWN |
//                    | CTRL|     | DEL |   | ENT |     | ALT |
                        label = "Raise";
                        bindings = <
   &kp FR_EXCL  &kp FR_AT &kp FR_HASH &kp FR_DLLR &kp FR_PRCNT &kp FR_QMARK   &kp FR_ASTRK &kp FR_MINUS  &kp FR_EQUAL &kp LPAR &kp RPAR &kp DEL
   &kp N1 &kp N2   &kp N3 &kp N4   &kp N5   &kp N6      &kp N7 &kp N8 &kp N9        &kp N0 &kp HOME &kp PG_UP
   &kp CARET &kp FR_DQT   &kp FR_LAQUO &kp FR_RAQUO   &kp FR_CENT   &kp FR_POUND_SIGN      &kp FR_DEG &kp FR_APOS  &kp FR_SEMI        &kp FR_COLON &kp END &kp PG_DN
                    	     &kp LCTRL &trans   &kp DEL   &kp RET   &trans    &kp RALT
                        >;
                };
                BT_LAYER {
// -----------------------------------------------------------------------------------------
// |  TAB |     |     |     |     |BTCLR|   |     |     |     |     |     | BKSP |
// | CTRL | BT0 | BT1 | BT2 | BT3 | BT4 |   |     |     |     |     |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     | ESC  |
//                    | GUI | BASE| SPC |   | ENT |     | ALT |
                        label = "BT";
                        bindings = <
   &kp  TAB  &trans &trans &trans &trans &bt BT_CLR   &trans &trans &trans &trans &trans &kp BSPC
   &kp LCTRL &bt BT_SEL 0   &bt BT_SEL 1 &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4      &trans &trans &trans &trans &trans &trans
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &trans &trans &trans &trans &trans &kp ESC
                    	     &kp LGUI &to 0   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
                NAV_LAYER {
// -----------------------------------------------------------------------------------------
// |  TAB |BGTDN|BGTUP|     |     |PRINT|   |  PGUP  |    |  UP  |     | HOME | DEL |
// | CTRL |RWND |PLAY |FFWD |     |SCROL|   | PGDWN  | LFT  | DWN  | RGT   | END   | INS |
// | SHFT |MUTE |VOLDN|VOLUP|     |PAUSE|   |    |    |    |    |  | ESC  |
//                    | GUI |BASE | SPC |   | ENT |     | ALT |
                        label = "Nav";
                        bindings = <
   &kp TAB   &kp C_BRI_DN &kp C_BRI_UP &trans &trans &kp PSCRN   &kp PG_UP &trans  &kp UP     &trans   &kp HOME    &kp DEL
   &kp LCTRL &kp C_PREV &kp C_PP &kp C_NEXT &trans &kp SLCK   &kp PG_DN &kp LEFT  &kp DOWN     &kp RIGHT   &kp END &kp INS 
   &kp LSHFT &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &trans &kp PAUSE_BREAK   &trans &trans  &trans &trans &trans &kp ESC
                  &kp LGUI &to 0 &kp SPACE   &kp RET &trans &kp RALT
                        >;
                };
                NUM_LAYER {
// -----------------------------------------------------------------------------------------
// | ¬  | { | } | ( |  |  ) | \ |   | /  |  7  |  8  |  9  | - | BKSP |
// | ¦ | <  | > | [ |  ]   |  |   |   |  * |  4  | 5  | 6   | +  | = |
// | ¤ | ² | ³ | ¼ |  ½  |  ¾   |   |  ,  |  1  |  2  |  3  | . | ENT  |
//                    | GUI |BASE | SPC |   | ENT |  ±  | 0 |
                        label = "Numpad";
                        bindings = <
   &kp FR_NOT   &kp LBRC &kp RBRC &kp LPAR &kp RPAR &kp BSLH   &kp FSLH &kp N7  &kp N8     &kp N9   &kp P    &kp BSPC
   &kp FR_BROKEN_BAR &kp LT &kp GT &kp LBKT &kp RBKT &kp PIPE   &kp STAR  &kp N4  &kp N5     &kp N6   &kp SEMI &kp SQT
   &kp FR_CURREN &kp FR_SQUARE &kp FR_CUBE &kp FR_FRAC_1_4 &kp FR_FRAC_1_2 &kp FR_FRAC_3_4   &kp COMMA &kp N1  &kp N2 &kp N3 &kp FSLH &kp RET
                  &kp LGUI &to 0 &kp SPACE   &kp RET &kp FR_PLUS_MINUS &kp N0
                        >;
                };
                GAME_LAYER {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |     |      |     |     |     | BSPC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |     |      |     |     |     |      |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |     |      |     |     |     | ESC  |
//                    |  1  |  2  | SPC |   | ENT | DEL  |BASE |
                        label = "Game";
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &trans &trans  &trans     &trans   &trans    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &trans &trans  &trans     &trans   &trans &trans
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &trans &trans  &trans &trans &trans &kp ESC
                  &kp N1 &kp N2 &kp SPACE   &kp RET &kp DEL &to 0
                        >;
                };
                TO_LAYER {
// -----------------------------------------------------------------------------------------
// |      |QWERT| NAV | NUM | GAME| BT  |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     | BASE|     |   |     |     |     |
                        label = "Layers";
                        bindings = <
   &trans  &to 1 &to 5 &to 6 &to 7 &to 4   &trans &trans &trans &trans &trans &trans
   &trans &trans   &trans &trans   &trans   &trans      &trans &trans &trans &trans &trans &trans
   &trans &trans   &trans &trans   &trans   &trans      &trans &trans &trans &trans &trans &trans
                    	     &trans &to 0   &trans   &trans   &trans    &trans
                        >;
                };
        };
};